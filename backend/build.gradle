buildscript {
    ext {
        springBootVersion = '1.4.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

processResources {
    if (!project.hasProperty('githubPassword')) {
        throw new GradleException('Please provide -P githubPassword parameter to your build.')
    }
    filesMatching("**/application.yml") {
        expand profile: project.hasProperty('profile') ? project.property('profile') : 'development',
                secretKey: project.hasProperty('secretKey') ? project.property('secretKey') : 'secretkey',
                githubPassword: project.property('githubPassword'),
                serverPort: project.hasProperty('serverPort') ? project.property('serverPort') : '8080',
                postgresUsername: project.hasProperty('postgresUsername') ? project.property('postgresUsername') : 'postgres',
                postgresPassword: project.hasProperty('postgresPassword') ? project.property('postgresPassword') : 'postgres',
                loggingDir: project.hasProperty('loggingDir') ? project.property('loggingDir') : "${System.getProperty('user.home')}/bloggito"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')

    runtime('org.postgresql:postgresql')

    compile 'org.mindrot:jbcrypt:0.4'
    compile 'io.jsonwebtoken:jjwt:0.7.0'
    compile 'org.apache.httpcomponents:httpclient:4.5.3'

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

springBoot {
    mainClass = "com.martinlinha.bloggito.MainConfiguration"
    executable = true
}

task run(dependsOn: bootRun) {}